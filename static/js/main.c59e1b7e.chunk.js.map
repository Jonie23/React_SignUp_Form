{"version":3,"sources":["Components/SignupComponent.js","Components/LoginComponent.js","App.js","serviceWorker.js","index.js"],"names":["SignupComponent","className","type","placeholder","href","Component","LoginComponent","id","htmlFor","App","to","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wSAqCeA,E,uKAhCP,OACI,8BACI,uCAEA,yBAAKC,UAAU,cACX,6CACA,2BAAOC,KAAK,OAAOD,UAAU,eAAeE,YAAY,gBAG5D,yBAAKF,UAAU,cACX,4CACA,2BAAOC,KAAK,OAAOD,UAAU,eAAeE,YAAY,eAG5D,yBAAKF,UAAU,cACX,gDACA,2BAAOC,KAAK,QAAQD,UAAU,eAAeE,YAAY,iBAG7D,yBAAKF,UAAU,cACX,2CACA,2BAAOC,KAAK,WAAWD,UAAU,eAAeE,YAAY,oBAGhE,4BAAQD,KAAK,SAAUD,UAAU,6BAAjC,WACA,uBAAGA,UAAU,8BAAb,sBAA6D,uBAAGG,KAAK,KAAR,kB,GA5B/CC,aCkCfC,E,uKA/BP,OACI,8BACI,uCAEA,yBAAKL,UAAU,cACX,gDACA,2BAAOC,KAAK,OAAOD,UAAU,eAAeE,YAAY,iBAG5D,yBAAKF,UAAU,cACX,2CACA,2BAAOC,KAAK,WAAWD,UAAU,eAAeE,YAAY,oBAGhE,yBAAKF,UAAU,cACX,yBAAKA,UAAU,kCACX,2BAAOC,KAAK,WAAWD,UAAU,uBAAuBM,GAAG,iBAC3D,2BAAON,UAAU,uBAAuBO,QAAQ,gBAAhD,iBAIR,4BAAQN,KAAK,SAASD,UAAU,6BAAhC,UACA,uBAAGA,UAAU,8BAAb,UACW,uBAAGG,KAAK,KAAR,mB,GA1BEC,aC0FdI,MA5Ef,WACE,OAAS,kBACP,IADO,KAEP,yBACIR,UAAY,OAChB,yBACIA,UAAY,kDAChB,yBACIA,UAAY,aAChB,kBACA,IADA,CACKA,UAAY,eACjBS,GACE,YAHF,YAFA,IAOO,yBACHT,UAAY,2BAChBM,GAAK,uBACL,wBACGN,UAAY,sBACf,wBACGA,UAAY,YACf,kBACA,IADA,CACKA,UAAY,WACjBS,GACE,YAHF,WAFA,KAFA,IASK,wBACFT,UAAY,YACf,kBACA,IADA,CACKA,UAAY,WACjBS,GACE,YAHF,eAdO,KAPP,KAFA,KAoCA,yBACIT,UAAY,gBAChB,yBACIA,UAAY,cAChB,kBACA,IADA,KAEA,kBACA,IADA,CACMU,OAAK,EAACC,KAAO,IACnBC,UACEP,IALF,IAOG,kBACH,IADG,CACGM,KAAO,WACbC,UACEP,IAVF,IAYG,kBACH,IADG,CACGM,KAAO,WACbC,UACEb,IAfF,KAFA,KAFA,MAxCO,MCLSc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.c59e1b7e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass SignupComponent extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <form>\r\n                <h3>Sign Up</h3>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>First name</label>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"First name\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Last name</label>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Last name\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Email address</label>\r\n                    <input type=\"email\" className=\"form-control\" placeholder=\"Enter email\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" />\r\n                </div>\r\n\r\n                <button type=\"submit\"  className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                <p className=\"forgot-password text-right\">Already registered <a href=\"#\">sign in?</a></p>\r\n\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignupComponent;","import React, { Component } from 'react';\r\n\r\nclass LoginComponent extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <form>\r\n                <h3>Sign in</h3>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Email address</label>\r\n                    <input type=\"emai\" className=\"form-control\" placeholder=\"Enter email\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" className=\"form-control\" placeholder=\"Enter password\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <div className=\"custom-control custom-checkbox\">\r\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\r\n                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\">Submit</button>\r\n                <p className=\"forgot-password text-right\">\r\n                    Forgot <a href=\"#\">password?</a>\r\n                </p>\r\n\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginComponent;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from 'react-router-dom'\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\nimport SignupComponent from './Components/SignupComponent';\nimport LoginComponent from './Components/LoginComponent';\n\n\n\nfunction App() {\n  return ( <\n    Router >\n    <\n    div className = \"App\" >\n    <\n    nav className = \"navbar navbar-expand-lg navbar-light fixed-top\" >\n    <\n    div className = \"container\" >\n    <\n    Link className = \"navbar-brand\"\n    to = {\n      \"/sign-in\"\n    } > WeTech <\n    /Link> <\n    div className = \"collapse navbar-collapse\"\n    id = \"navbarTogglerDemo02\" >\n    <\n    ul className = \"navbar-nav ml-auto\" >\n    <\n    li className = \"nav-item\" >\n    <\n    Link className = \"nav-link\"\n    to = {\n      \"/sign-in\"\n    } > Login < /Link> <\n    /li> <\n    li className = \"nav-item\" >\n    <\n    Link className = \"nav-link\"\n    to = {\n      \"/sign-up\"\n    } > Sign up < /Link></li >\n    <\n    /ul> <\n    /div> <\n    /div> <\n    /nav>\n\n\n\n    <\n    div className = \"auth-wrapper\" >\n    <\n    div className = \"auth-inner\" >\n    <\n    Switch >\n    <\n    Route exact path = '/'\n    component = {\n      LoginComponent\n    }\n    /> <\n    Route path = '/sign-in'\n    component = {\n      LoginComponent\n    }\n    /> <\n    Route path = \"/sign-up\"\n    component = {\n      SignupComponent\n    }\n    /> <\n    /Switch> <\n    /div> <\n    /div>\n\n\n\n    <\n    /div> <\n    /Router>\n\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}